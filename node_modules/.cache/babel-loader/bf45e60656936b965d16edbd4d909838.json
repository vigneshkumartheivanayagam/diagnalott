{"ast":null,"code":"const initialState = {\n  contents: [],\n  filtered: [],\n  searchKey: ''\n};\n\nfunction contentReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_CONTENTS\":\n      return { ...state,\n        contents: [...state.contents, ...action.data]\n      };\n\n    case \"ADD_SEARCH\":\n      let searchedKeyWord = action.data;\n      let contents = state.contents;\n      contents = contents.filter(content => content.name.toLowerCase().indexOf(searchedKeyWord.toLowerCase()) > -1);\n      return { ...state,\n        filtered: contents,\n        searchKey: searchedKeyWord\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default contentReducer;","map":{"version":3,"sources":["/home/vignesh/personal/diagnal-ott-without-tailwind/src/reducers/contentReducer.js"],"names":["initialState","contents","filtered","searchKey","contentReducer","state","action","type","data","searchedKeyWord","filter","content","name","toLowerCase","indexOf"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAElD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,cAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoB,GAAGK,MAAM,CAACE,IAA9B;AAAtB,OAAP;;AACJ,SAAK,YAAL;AACI,UAAIC,eAAe,GAAGH,MAAM,CAACE,IAA7B;AACA,UAAIP,QAAQ,GAAGI,KAAK,CAACJ,QAArB;AACAA,MAAAA,QAAQ,GAAGA,QAAQ,CAACS,MAAT,CAAgBC,OAAO,IAAMA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCL,eAAe,CAACI,WAAhB,EAAnC,IAAoE,CAAC,CAAlG,CAAX;AACA,aAAO,EAAE,GAAGR,KAAL;AAAYH,QAAAA,QAAQ,EAAED,QAAtB;AAAgCE,QAAAA,SAAS,EAAEM;AAA3C,OAAP;;AACJ;AACI,aAAOJ,KAAP;AATR;AAYH;;AAED,eAAeD,cAAf","sourcesContent":["const initialState = {\n    contents: [],\n    filtered: [],\n    searchKey: ''\n}\n\nfunction contentReducer(state = initialState, action) {\n\n    switch (action.type) {\n        case \"ADD_CONTENTS\":\n            return { ...state, contents: [...state.contents, ...action.data] };\n        case \"ADD_SEARCH\":\n            let searchedKeyWord = action.data\n            let contents = state.contents\n            contents = contents.filter(content => ((content.name.toLowerCase().indexOf(searchedKeyWord.toLowerCase()) > -1)));\n            return { ...state, filtered: contents, searchKey: searchedKeyWord };\n        default:\n            return state;\n    }\n\n}\n\nexport default contentReducer;"]},"metadata":{},"sourceType":"module"}